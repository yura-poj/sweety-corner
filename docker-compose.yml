services:
  db:
    image: postgres:16
    container_name: sweety_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: sweety_corner_production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sweety_corner_production"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - sweety_pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      sweety:
        aliases:
          - db

  app:
    build:
      context: .
      args:
        RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    container_name: sweety_corner
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .docker.env
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      DATABASE_HOST: db
      DB_USERNAME: postgres
      DB_PASSWORD: ${DB_PASSWORD}
      RAILS_MAX_THREADS: 5
      ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: ${ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY}
    ports:
      - "3000:3000"
    networks:
      sweety:
        aliases:
          - app
    # volumes:
    #   - app_storage:/app/storage

volumes:
  sweety_pgdata:
  # app_storage
networks:
  sweety:
    driver: bridge


